#!/usr/bin/env zsh
# query a wordpress mysql instance and extract the posts
# split the query results into individual post files.
# convert the html posts into jekyll markdown posts.

help(){
    print 'gen-posts - convert wordpress posts into markdown.'
    print ' '
    print 'Usage:'
    print 'gen-posts -u <userid> -d <database-name>'
    print ' '
    print 'Query an mysql wordpress database and extract posts'
    print 'Extract and convert posts into markdown posts with'
    print 'the header and naming conventions used by jekyl'
    print ' '
    print 'If you have already queried everything and just wish'
    print 'to reconvert your wp_posts run this with the -n  option'
    print '-n will skip steps which query the database and create'
    print 'the individual wp_post files.'
    print ' '
    print 'The process is this:'
    print '  * query mysql database and create all_posts.txt'
    print '  * use awk to extract each post into an individual'
    print '    file in the wp_posts directory.'
    print '  * use html-md.sh to convert and rename the posts'
    print '    into markdown with the jekyll header and filenaming'
    print '    conventions.  The converted posts will be in'
    print '    the md_posts directory'
    print ' '
    print 'Conversion may not be complete '
    print 'some tags may be missed, change convert.sed as needed.'
    print 'My requirements for html where pretty simple. YMMV.'
    print 'Add patterns to convert.sed as needed. '
    print 'Some html tags like <pre> work perfectly fine.'
    print ' '
    print ' -u user        mysql user id'
    print ' '
    print ' -d db          mysql database name'
    print ' '
    print ' -q filename    Filename for SQL query'
    print '                defaults to "select-posts.sql"'
    print '                There is also "select-pages.sql"'
    print '                or you can roll your own.'
    print ' '
    print ' -w directory   Directory to place wordpress posts.'
    print '                By default this is "wp_posts".'
    print ' '
    print ' -m directory   Directory to place markdown posts.'
    print '                By default this is "md_posts".'
    print ' '
    print ' -n             No Query. Just convert the html posts'
    print '                in the -w directory to markdown and'
    print '                put them in the -m directory.'
    print ' '
    print ' -f filename    Wordpress post file to process, implies'
    print '                -n, use -m to change the destination.'
    print ' '
    print ' -h             This help text.'
    print ' '
    print 'Files:'
    print ' * gen-posts -- this file.  Uses the following files.'
    print ' '
    print '     * select-posts.sql  -- query for posts'
    print '     * select-pages.sql  -- query for pages'
    print '     * html-md -- rename, insert header, convert to markdown'
    print '     * convert.sed  -- Sed commands to cleanup and convert'
    print '                       html file to markdown.'
    print ' '
    print 'Example:'
    print './gen-posts -u eric -d ericgebhart'
    print ' '
    print ' To use the pages query and put your pages in'
    print ' a different folder you can do something like this'
    print ' '
    print './gen-posts -u eric -d ericgebhart '
    print '            -q select-pages.sql'
    print '            -w wp_pages'
    print '            -m md_pages'
    print ' '
    print './gen-posts -f wp_posts/wp-post1'
    print ' '
    print 'See Also: '
    print 'http://github.com/EricGebhart/wp-md/'
    print ' '
    exit
}


# $opt will hold the current option
local opt
wp_directory="wp_posts"
md_directory="md_posts"
query="select-posts.sql"
noquery=0
while getopts hnu:d:q:w:m:f: opt; do
    # loop continues till options finished
    # see which pattern $opt matches...
    case $opt in
        (u)
            userid=$OPTARG
            ;;
        (d)
            db=$OPTARG
            ;;
        (q)
            query=$OPTARG
            ;;
        (f)
            filename=$OPTARG
            noquery=1
            ;;
        (w)
            wp_directory=$OPTARG
            ;;
        (m)
            md_directory=$OPTARG
            ;;
        (n)
            noquery=1
            ;;
        (h)
            help
            ;;
	# matches a question mark
	# (and nothing else, see text)
        (\?)
            print "Bad option:" $*
            print " "
            help
            return 1
            ;;
    esac
done

if [ $noquery -ne 1 ]; then

    sudo mysql -u $userid -p $db < $query > all_posts.txt

    mkdir -p $wp_directory
    echo "Putting wordpress posts here:" $wp_directory

    # split all_posts into individual posts and put them
    # in the wp_posts directory.
    awk -v dir=$wp_directory '/\*\*\*\*\*.*/{x=dir"/wp-post"++i;}{print > x;}' all_posts.txt

fi

# convert and rename wordpress posts into jekyll markdown
# put them into the md_posts directory.

echo "Putting markdown posts here:" $md_directory

if [ -v ${filename} ]; then
    find $wp_directory -type f -name 'wp-post*' | xargs -i -n 1 ./html-md {} $md_directory
else
    ./html-md $filename $md_directory
fi
