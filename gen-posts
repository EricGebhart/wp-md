#!/usr/bin/env zsh
# query a wordpress mysql instance and extract the posts
# split the query results into individual post files.
# convert the html posts into jekyll markdown posts.

help(){
    print 'gen-posts - convert wordpress posts into markdown.'
    print ' '
    print 'Usage:'
    print 'gen-posts -u <userid> -d <database-name>'
    print ' '
    print 'Query an mysql wordpress database and extract posts'
    print 'Extract and convert posts into markdown posts with'
    print 'the header and naming conventions used by jekyl'
    print ' '
    print 'The process is this:'
    print '  * query mysql database and create all_posts.txt'
    print '  * use awk to extract each post into an individual'
    print '    file in the wp_posts directory.'
    print '  * use html-md.sh to convert and rename the posts'
    print '    into markdown with the jekyll header and filenaming'
    print '    conventions.  The converted posts will be in'
    print '    the md_posts directory'
    print ' '
    print 'Conversion may not be complete, URL's will need manual'
    print 'editing and if you have more complex html some tags'
    print 'may be missed, change convert.sed as needed.'
    print 'URLs could be done, I just didn't have that many.'
    print 'My requirements for html where pretty simple. YMMV.'
    print 'Add patterns to convert.sed as needed. '
    print 'Some html tags like <pre> work perfectly fine.'
    print ' '
    print ' -u user      mysql user id'
    print ' -d db        mysql database name'
    print ' -q filename  Filename for SQL query'
    print '              defaults to "select-posts.sql"'
    print ' -h           This help text.'
    print ' '
    print 'Files:'
    print ' * gen-posts -- this file.  Uses the following files.'
    print ' '
    print '     * select-posts.sql  -- query for posts'
    print '     * html-md -- rename, insert header, convert to markdown'
    print '     * convert.sed  -- Sed commands to cleanup and convert'
    print '                       html file to markdown.'
    print ' '
    print 'Example:'
    print './gen-posts -u eric -d ericgebhart'
    print ' '
    print 'See Also: '
    print 'html-md.sh will does the conversion from the'
    print 'Extracted posts using convert.sed for the changes'
    print 'between html and markdown.'
    print 'http://github.com/EricGebhart/wp-md/'
    print ' '
    exit
}


# $opt will hold the current option
local opt
while getopts hu:d:q: opt; do
    # loop continues till options finished
    # see which pattern $opt matches...
    query="select-posts.sql"
    case $opt in
        (u)
            userid=$OPTARG
            ;;
        (d)
            db=$OPTARG
            ;;
        (q)
            query=$OPTARG
            ;;
        (h)
            help
            ;;
	# matches a question mark
	# (and nothing else, see text)
        (\?)
            print "Bad option:" $*
            print " "
            help
            return 1
            ;;
    esac
done

sudo mysql -u $userid -p $db < $query > all_posts.txt

mkdir -p wp_posts
# split all_posts into individual posts and put them in the wp_posts directory.
awk '/\*\*\*\*\*.*/{x="wp_posts/wp-post"++i;}{print > x;}' all_posts.txt

# convert and rename wordpress posts into jekyll markdown
# put them into the md_posts directory.

find wp_posts -type f -name 'wp-post*' | xargs -n 1 ./html-md.sh
